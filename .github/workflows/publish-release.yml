on:
  release:
    types: [published]

name: Upload Release Asset

jobs:
  publish-release:
    name: Publish release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.konan
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build project
        run: |
          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
          echo "New version: ${NEW_VERSION}"
          echo "Github username: ${GITHUB_ACTOR}"
          ./gradlew clean -PVERSION_NAME=${NEW_VERSION} -x test -x lint generateIosArtefacts
        env:
          CONFIGURATION: RELEASE
      - name: Upload Release Asset
        id: upload-release-asset
        uses: AButler/upload-release-assets@v2.0
        with:
          files: 'shared/build/ios-artefacts/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ env.NEW_VERSION }}
      - name: Publish Android binaries
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # The GITHUB_REF tag comes in the format 'refs/tags/xxx'.
          # If we split on '/' and take the 3rd value,
          # we can get the release name.
        run: |
          # ./gradlew publish
      - name: Commit files
        run: |
          git config --global user.email "adiksonline@gmail.com"
          git config --global user.name "Kingsley Adio"
          git fetch && git checkout master
          git add *.json
          git commit -m "Update carthage file(s) [skip ci] [ci skip]" && git push origin master
